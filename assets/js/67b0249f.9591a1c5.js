"use strict";(self.webpackChunkbpd_reference=self.webpackChunkbpd_reference||[]).push([[1515],{477:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>c,metadata:()=>i,toc:()=>p});var s=n(4848),t=n(8453),a=(n(8597),n(8205)),d=n(8951);const c={sidebar_position:1},o=void 0,i={id:"documentation/data-format-conversion/np.array()",title:"np.array()",description:"np.array(input)",source:"@site/docs/documentation/data-format-conversion/np.array().md",sourceDirName:"documentation/data-format-conversion",slug:"/documentation/data-format-conversion/np.array()",permalink:"/bpd-reference/docs/documentation/data-format-conversion/np.array()",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Data Format Conversion",permalink:"/bpd-reference/docs/documentation/data-format-conversion/"},next:{title:"list()",permalink:"/bpd-reference/docs/documentation/data-format-conversion/list()"}},l={},p=[];function h(e){const r={code:"code",hr:"hr",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("code",{children:"np.array(input)"}),"\n",(0,s.jsxs)("div",{className:"base",children:[(0,s.jsx)("p",{children:(0,s.jsx)("strong",{children:"Casts an iterable (bpd.Series, bpd.Index, and list) into a NumPy array."})}),(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{className:"term",children:"Input:"}),(0,s.jsxs)("dd",{className:"parameter",children:["input : ",(0,s.jsx)("em",{children:"ser, df.index, df.columns, list"})]}),(0,s.jsx)("dd",{className:"parameter-description",children:"Name of series/.columns/list to cast to an array."}),(0,s.jsx)("dt",{className:"term",children:"Returns:"}),(0,s.jsx)("dd",{children:"An array with the same elements as the input. "}),(0,s.jsx)("dt",{className:"term",children:"Return Type:"}),(0,s.jsx)("dd",{children:"Array"})]})]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)("p",{children:(0,s.jsx)("strong",{children:"Series to Array"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:"weight_ser = pets.get('Weight')\r\nweight_ser\n"})}),"\n",(0,s.jsx)(a.A,{data:'{"name":"Weight", "dtype": "float64", "index":[0,1,2,3,4,5,6,7],"data":[40.0,1.5,15.0,80.0,25.0,1.0,0.25,10.0]}'}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:"weight_arr = np.array(weight_ser)\r\nweight_arr\n"})}),"\n",(0,s.jsx)(r.p,{children:"array([40. , 15. , 20. , 80. , 25. , 1. , 0.25])"}),"\n",(0,s.jsx)("p",{children:(0,s.jsx)("strong",{children:"bpd.Index to Array"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:"pets_idx = pets.set_index('ID').index\r\npets_idx\n"})}),"\n",(0,s.jsx)(r.p,{children:"Index(['dog_001', 'cat_001', 'cat_002', 'dog_002', 'dog_003', 'ham_001', 'ham_002', 'cat_003'], dtype='object', name='ID')"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:"#df.index to array\r\npets_idx_arr = np.array(pets.set_index('ID').index)\r\npets_idx_arr\n"})}),"\n",(0,s.jsx)(r.p,{children:"array(['dog_001', 'cat_001', 'cat_002', 'dog_002', 'dog_003', 'ham_001', 'ham_002', 'cat_003'], dtype=object)"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:"pets_cols = pets.columns\r\npet_cols\n"})}),"\n",(0,s.jsx)(r.p,{children:"Index(['ID', 'Species', 'Color', 'Weight', 'Age', 'Is_Cat', 'Owner_Comment'], dtype='object')"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:"#df.columns to array\r\npets_cols_arr = np.array(pets.columns)\r\npet_cols_arr\n"})}),"\n",(0,s.jsx)(r.p,{children:"array(['ID', 'Species', 'Color', 'Weight', 'Age', 'Is_Cat',\r\n'Owner_Comment'], dtype=object)"}),"\n",(0,s.jsx)("p",{children:(0,s.jsx)("strong",{children:"List to Array"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:'pets_list = ["dog", "cat", "hamster", "cat", "cat", "dog", "dog", "hamster", "hamster"]\r\npet_list\n'})}),"\n",(0,s.jsx)(r.p,{children:'["dog", "cat", "hamster", "cat", "cat", "dog", "dog", "hamster", "hamster"]'}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:"pets_list_arr = np.array(pets_list)\r\npet_list_arr\n"})}),"\n",(0,s.jsx)(r.p,{children:'array(["dog", "cat", "hamster", "cat", "cat", "dog", "dog", "hamster", "hamster"], dtype=object)'}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(d.A,{})]})}function m(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8597:(e,r,n)=>{n.d(r,{A:()=>t});n(6540);var s=n(4848);const t=e=>{let{data:r}=e,n=[],t=[],a="",d=[];if(r){const e=JSON.parse(r);n=e.columns||[],t=e.data||[],a=e.indexName||"Index",d=e.index||[]}return(0,s.jsx)("div",{className:"dataframe-container",children:(0,s.jsxs)("table",{className:"dataframe-table",children:[(0,s.jsx)("thead",{children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{children:a}),n.map(((e,r)=>(0,s.jsx)("th",{children:e},r)))]})}),(0,s.jsx)("tbody",{children:t.map(((e,r)=>(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{className:"index-value",children:d[r]}),e.map(((e,r)=>{return(0,s.jsx)("td",{children:(n=e,"boolean"==typeof n?n.toString().charAt(0).toUpperCase()+n.toString().slice(1):n)},r);var n}))]},r)))})]})})}},8205:(e,r,n)=>{n.d(r,{A:()=>t});n(6540);var s=n(4848);const t=e=>{let{data:r}=e,n=[],t=[],a="",d="";if(r)try{const e=JSON.parse(r);a=e.name||"",d=e.dtype||"Unknown type",n=e.index||[],t=e.data||[]}catch(o){console.error("Error parsing data prop in SeriesComponent:",o)}const c=t.map((e=>JSON.stringify(e)));return(0,s.jsxs)("div",{className:"series-container",children:[(0,s.jsx)("ul",{className:"series-list",children:c.map(((e,r)=>(0,s.jsxs)("li",{className:"series-item",children:[(0,s.jsx)("span",{className:"series-index",children:n[r]}),(0,s.jsx)("span",{className:"series-value",children:"true"===e||"false"===e?e.charAt(0).toUpperCase()+e.slice(1):e})]},r)))}),(0,s.jsxs)("div",{className:"series-footer",children:["Name: ",a,", dtype: ",d]})]})}},8951:(e,r,n)=>{n.d(r,{A:()=>t});n(6540);var s=n(4848);const t=()=>(0,s.jsxs)("p",{style:{fontSize:"1.2rem"},children:["Problems or suggestions about this page?","  ",(0,s.jsx)("a",{href:"https://forms.gle/cPdGGZ17j3XeQ6PE8",target:"_blank",rel:"noopener noreferrer",children:"Fill out our feedback form."})]})},8453:(e,r,n)=>{n.d(r,{R:()=>d,x:()=>c});var s=n(6540);const t={},a=s.createContext(t);function d(e){const r=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),s.createElement(a.Provider,{value:r},e.children)}}}]);