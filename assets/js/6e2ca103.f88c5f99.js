"use strict";(self.webpackChunkbpd_reference=self.webpackChunkbpd_reference||[]).push([[5980],{3433:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>l,contentTitle:()=>d,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var r=t(4848),n=t(8453),a=(t(8597),t(8205),t(8951)),i=t(5158);const o={sidebar_position:1},d=void 0,c={id:"documentation/plotting/Histogram",title:"Histogram",description:"df.plot(kind='hist', y=datacol, bins=thebins, density=True, ec='w')",source:"@site/docs/documentation/plotting/Histogram.md",sourceDirName:"documentation/plotting",slug:"/documentation/plotting/Histogram",permalink:"/bpd-reference/docs/documentation/plotting/Histogram",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Plotting",permalink:"/bpd-reference/docs/documentation/plotting/"},next:{title:"Scatter Plot",permalink:"/bpd-reference/docs/documentation/plotting/Scatter Plot"}},l={},p=[];function h(e){const s={a:"a",code:"code",hr:"hr",img:"img",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("code",{children:"df.plot(kind='hist', y=data_col, bins=the_bins, density=True, ec='w')"}),"\n",(0,r.jsxs)("div",{className:"base",children:[(0,r.jsx)("p",{children:(0,r.jsx)("strong",{children:"Creates a histogram using a DataFrame."})}),(0,r.jsxs)("dl",{children:[(0,r.jsx)("dt",{className:"term",children:"Input:"}),(0,r.jsxs)("dd",{className:"parameter",children:["kind : ",(0,r.jsx)("em",{children:"string"})]}),(0,r.jsx)("dd",{className:"parameter-description",children:"To create a histogram, use kind='hist'"}),(0,r.jsxs)("dd",{className:"parameter",children:["y : ",(0,r.jsx)("em",{children:"label"})]}),(0,r.jsx)("dd",{className:"parameter-description",children:"Column to calculate frequency/probability density."}),(0,r.jsxs)("dd",{className:"parameter",children:["bins : ",(0,r.jsx)("em",{children:"integer or array, default None"})]}),(0,r.jsx)("dd",{className:"parameter-description",children:"If integer, number of bins to use."}),(0,r.jsx)("dd",{className:"parameter-description",children:"If array, specifies the bin edges. "}),(0,r.jsx)("dd",{className:"parameter-description",children:"If not specified, matplotlib tries to calculate the optimal number of bins.  "}),(0,r.jsxs)("dd",{className:"parameter",children:["density : ",(0,r.jsx)("em",{children:"boolean, default False"})]}),(0,r.jsx)("dd",{className:"parameter-description",children:"If False, y-axis plots the number of observations."}),(0,r.jsx)("dd",{className:"parameter-description",children:"If True, y-axis plots the probability density."}),(0,r.jsxs)("dd",{className:"parameter",children:["ec : ",(0,r.jsx)("em",{children:"string"})]}),(0,r.jsx)("dd",{className:"parameter-description",children:"Color for histogram bin outlines, use ec='w' for a white outline."}),(0,r.jsx)("dt",{className:"term",children:"Returns:"}),(0,r.jsxs)("dd",{children:["Matplotlib plot created using ",(0,r.jsx)(s.a,{href:"https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.plot.html",children:"parameters"}),"."]}),(0,r.jsx)("dt",{className:"term",children:"Return Type:"}),(0,r.jsx)("dd",{children:"Matplotlib plot"}),(0,r.jsx)("dt",{className:"term",children:"Note:"}),(0,r.jsx)("dd",{children:(0,r.jsxs)("ul",{children:[(0,r.jsx)("li",{children:"In a histogram, only the last bin is inclusive of the right endpoint! [left, right)"}),(0,r.jsx)("li",{children:"The bins you specify don't have to include all data values; data values not in any bin won't be shown in the histogram."})]})})]})]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsxs)(s.p,{children:["The diagram below provides a visualization of how histograms are formed. For additional helpful visual guides, please visit the ",(0,r.jsx)(s.a,{href:"https://dsc10.com/diagrams/",children:"Diagrams"})," site."]}),"\n",(0,r.jsx)(i.A,{src:"https://docs.google.com/presentation/d/17-vkRiBApVy9oZUu87NCVtuZvyq6YpqxyGF5vvXxEA8/embed?start=true&loop=false&delayms=3000&rm=minimal",sourceLink:"https://docs.google.com/presentation/d/1D4YhRuCjRivWVbjluXtxx_GgsdcMDBdesnwDtCEfDXY/edit?usp=sharing"}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"pets.plot(kind='hist', y='Age', bins=np.arange(0, 15, 3), density=True, ec='w')\n"})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.img,{alt:"Histogram example 1",src:t(3710).A+"",width:"585",height:"413"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"pets.plot(kind='hist', y='Weight', bins=5, density=True, ec='w')\n"})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.img,{alt:"Histogram example 2",src:t(5509).A+"",width:"585",height:"413"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"# DataFrame with weights of only cats and dogs.\r\ncats_dogs = bpd.DataFrame().assign(\r\n    cats=np.array(pets[pets.get('Species') == 'cat'].get('Weight')),\r\n    dogs=np.array(pets[pets.get('Species') == 'dog'].get('Weight')),\r\n)\r\n\r\n# Overlaid histogram.\r\nbins = np.arange(0, 40, 15)\r\ncats_dogs.plot(kind='hist', alpha=0.65, density=True, ec='w', bins=bins)\n"})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.img,{alt:"Histogram example 3",src:t(6092).A+"",width:"576",height:"418"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"# Without the `bins` parameter.\r\npets.plot(kind='hist', y='Weight', density=True, ec='w')\n"})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.img,{alt:"Histogram example 4",src:t(6051).A+"",width:"576",height:"413"})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(a.A,{})]})}function m(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8597:(e,s,t)=>{t.d(s,{A:()=>n});t(6540);var r=t(4848);const n=e=>{let{data:s}=e,t=[],n=[],a="",i=[];if(s){const e=JSON.parse(s);t=e.columns||[],n=e.data||[],a=e.indexName||"Index",i=e.index||[]}return(0,r.jsx)("div",{className:"dataframe-container",children:(0,r.jsxs)("table",{className:"dataframe-table",children:[(0,r.jsx)("thead",{children:(0,r.jsxs)("tr",{children:[(0,r.jsx)("th",{children:a}),t.map(((e,s)=>(0,r.jsx)("th",{children:e},s)))]})}),(0,r.jsx)("tbody",{children:n.map(((e,s)=>(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{className:"index-value",children:i[s]}),e.map(((e,s)=>{return(0,r.jsx)("td",{children:(t=e,"boolean"==typeof t?t.toString().charAt(0).toUpperCase()+t.toString().slice(1):t)},s);var t}))]},s)))})]})})}},5158:(e,s,t)=>{t.d(s,{A:()=>a});var r=t(6540),n=t(4848);const a=function(e){let{src:s,sourceLink:t,aspectRatio:a=16/9}=e;const[i,o]=(0,r.useState)(0),[d,c]=(0,r.useState)(0),l=(0,r.useRef)(null);return(0,r.useEffect)((()=>{const e=()=>{if(l.current){const e=l.current.offsetWidth;c(e/a)}};return e(),window.addEventListener("resize",e),()=>window.removeEventListener("resize",e)}),[a]),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("div",{ref:l,style:{width:"100%",position:"relative",maxWidth:"100%",backgroundColor:"white"},children:(0,n.jsx)("iframe",{src:s,style:{width:"100%",height:`${d}px`,border:"0",allowFullScreen:!0}},i)}),(0,n.jsx)("div",{style:{display:"flex",justifyContent:"center",margin:"20px 0"},children:(0,n.jsx)("a",{href:t,target:"_blank",rel:"noopener noreferrer",children:"(Source)"})}),(0,n.jsx)("div",{style:{display:"flex",justifyContent:"center",margin:"10px 0"},children:(0,n.jsx)("button",{onClick:()=>{o((e=>e+1))},style:{backgroundColor:"#4CAF50",color:"white",padding:"10px 20px",border:"none",borderRadius:"5px",cursor:"pointer",outline:"none",fontSize:"16px",fontWeight:"bold",boxShadow:"0 4px 8px rgba(0,0,0,0.1)",transition:"background-color 0.3s"},onMouseOver:e=>e.currentTarget.style.backgroundColor="#45a049",onMouseOut:e=>e.currentTarget.style.backgroundColor="#4CAF50",children:"Restart Diagram"})})]})}},8205:(e,s,t)=>{t.d(s,{A:()=>n});t(6540);var r=t(4848);const n=e=>{let{data:s}=e,t=[],n=[],a="",i="";if(s)try{const e=JSON.parse(s);a=e.name||"",i=e.dtype||"Unknown type",t=e.index||[],n=e.data||[]}catch(d){console.error("Error parsing data prop in SeriesComponent:",d)}const o=n.map((e=>JSON.stringify(e)));return(0,r.jsxs)("div",{className:"series-container",children:[(0,r.jsx)("ul",{className:"series-list",children:o.map(((e,s)=>(0,r.jsxs)("li",{className:"series-item",children:[(0,r.jsx)("span",{className:"series-index",children:t[s]}),(0,r.jsx)("span",{className:"series-value",children:"true"===e||"false"===e?e.charAt(0).toUpperCase()+e.slice(1):e})]},s)))}),(0,r.jsxs)("div",{className:"series-footer",children:["Name: ",a,", dtype: ",i]})]})}},8951:(e,s,t)=>{t.d(s,{A:()=>n});t(6540);var r=t(4848);const n=()=>(0,r.jsxs)("p",{style:{fontSize:"1.2rem"},children:["Problems or suggestions about this page?","  ",(0,r.jsx)("a",{href:"https://forms.gle/cPdGGZ17j3XeQ6PE8",target:"_blank",rel:"noopener noreferrer",children:"Fill out our feedback form."})]})},3710:(e,s,t)=>{t.d(s,{A:()=>r});const r=t.p+"assets/images/histex1-ca89deede07f4121aaf1ffcdc41ca947.png"},5509:(e,s,t)=>{t.d(s,{A:()=>r});const r=t.p+"assets/images/histex2-5b2bc1d1349c29bf183a61e69dbe6c3a.png"},6092:(e,s,t)=>{t.d(s,{A:()=>r});const r=t.p+"assets/images/histex3-48dc5c40cb3bf5281d80af0c4877ed82.png"},6051:(e,s,t)=>{t.d(s,{A:()=>r});const r=t.p+"assets/images/histex4-bc72986eb46b0b82dbdb0509f4c712e5.png"},8453:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>o});var r=t(6540);const n={},a=r.createContext(n);function i(e){const s=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),r.createElement(a.Provider,{value:s},e.children)}}}]);