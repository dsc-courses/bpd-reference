"use strict";(self.webpackChunkbpd_reference=self.webpackChunkbpd_reference||[]).push([[4469],{352:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var r=t(4848),s=t(8453);t(8597),t(8205);const i={sidebar_position:1},a=void 0,o={id:"documentation/Functions/Writing Functions",title:"Writing Functions",description:"def function_name(parameters):",source:"@site/docs/documentation/Functions/Writing Functions.md",sourceDirName:"documentation/Functions",slug:"/documentation/Functions/Writing Functions",permalink:"/bpd-reference/docs/documentation/Functions/Writing Functions",draft:!1,unlisted:!1,editUrl:"https://github.com/dsc-courses/bpd-reference/tree/main/docs/documentation/Functions/Writing Functions.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"df[]",permalink:"/bpd-reference/docs/documentation/querying/df[]"},next:{title:"Applying Functions",permalink:"/bpd-reference/docs/documentation/Functions/Applying Functions"}},c={},d=[];function l(e){const n={code:"code",hr:"hr",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("code",{children:"def function_name(parameters):"}),"\n",(0,r.jsxs)("div",{className:"base",children:[(0,r.jsx)("p",{children:(0,r.jsx)("strong",{children:"Define a customizable function in Python."})}),(0,r.jsxs)("dl",{children:[(0,r.jsx)("dt",{className:"term",children:"Input:"}),(0,r.jsxs)("dd",{className:"parameter",children:["parameters: ",(0,r.jsx)("em",{children:"any data type"})]}),(0,r.jsx)("dd",{className:"parameter-description",children:"These parameters are variables that act as placeholders for the values you pass to the function. A function can take a single parameter or a comma-separated list of parameters. Including parameters is optional; a function may operate without any."}),(0,r.jsx)("dt",{className:"term",children:"Returns:"}),(0,r.jsx)("dd",{children:"The result of the function. If there is no return statement, the function returns None by default."}),(0,r.jsx)("dt",{className:"term",children:"Return Type:"}),(0,r.jsx)("dd",{children:"The type of the returned object depends on the value provided by the return expression. If no return statement is used, the return type is NoneType."})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'def is_dog(species):\r\n    """\r\n    Sees if the species is a dog.\r\n    ---\r\n    Input:\r\n        species: a string\r\n    ---\r\n    Output:\r\n        a boolean\r\n    """\r\n    if species == \'dog\':\r\n        return True\r\n    return False\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"is_dog('dog')\n"})}),"\n",(0,r.jsx)(n.p,{children:"True"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def categorize_animal(index):\r\n    \"\"\"\r\n    Categorizes the animal based on its species, weight, and age.\r\n    ---\r\n    Input:\r\n        index: a string containing the ID of the animal\r\n    ---\r\n    Output:\r\n        a string describing the animal\r\n    \"\"\"\r\n    pets_idx = pets.set_index('ID')\r\n    species = pets_idx.loc[index].get('Species')\r\n    weight = pets_idx.loc[index].get('Weight')\r\n    age = pets_idx.loc[index].get('Age')\r\n    \r\n    # Initialize descriptors\r\n    life_stage = ''\r\n    weight_status = ''\r\n    \r\n    # Define thresholds for dogs\r\n    if species == 'dog':\r\n        if age < 2:\r\n            life_stage = 'Puppy'\r\n        elif age < 7:\r\n            life_stage = 'Adult'\r\n        else:\r\n            life_stage = 'Senior'\r\n        \r\n        if weight < 20:\r\n            weight_status = 'Underweight'\r\n        elif weight <= 60:\r\n            weight_status = 'Normal'\r\n        else:\r\n            weight_status = 'Overweight'\r\n    \r\n    # Define thresholds for cats\r\n    elif species == 'cat':\r\n        if age < 2:\r\n            life_stage = 'Kitten'\r\n        elif age < 10:\r\n            life_stage = 'Adult'\r\n        else:\r\n            life_stage = 'Senior'\r\n        \r\n        if weight < 2:\r\n            weight_status = 'Underweight'\r\n        elif weight <= 10:\r\n            weight_status = 'Normal'\r\n        else:\r\n            weight_status = 'Overweight'\r\n    \r\n    # Define thresholds for hamsters\r\n    elif species == 'hamster':\r\n        if age < 0.5:\r\n            life_stage = 'Young'\r\n        elif age < 2:\r\n            life_stage = 'Adult'\r\n        else:\r\n            life_stage = 'Senior'\r\n        \r\n        if weight < 0.2:\r\n            weight_status = 'Underweight'\r\n        elif weight <= 0.5:\r\n            weight_status = 'Normal'\r\n        else:\r\n            weight_status = 'Overweight'\r\n    \r\n    # Return a combined description as a single string\r\n    return f\"{life_stage} {weight_status}\"\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"categorize_animal(pets.get('ID').iloc[0])\n"})}),"\n",(0,r.jsx)(n.p,{children:"'Adult Normal'"})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8597:(e,n,t)=>{t.d(n,{A:()=>s});t(6540);var r=t(4848);const s=e=>{let{data:n}=e,t=[],s=[],i="",a=[];if(n){const e=JSON.parse(n);t=e.columns||[],s=e.data||[],i=e.indexName||"Index",a=e.index||[]}return(0,r.jsx)("div",{className:"dataframe-container",children:(0,r.jsxs)("table",{className:"dataframe-table",children:[(0,r.jsx)("thead",{children:(0,r.jsxs)("tr",{children:[(0,r.jsx)("th",{children:i}),t.map(((e,n)=>(0,r.jsx)("th",{children:e},n)))]})}),(0,r.jsx)("tbody",{children:s.map(((e,n)=>(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{className:"index-value",children:a[n]}),e.map(((e,n)=>{return(0,r.jsx)("td",{children:(t=e,"boolean"==typeof t?t.toString().charAt(0).toUpperCase()+t.toString().slice(1):t)},n);var t}))]},n)))})]})})}},8205:(e,n,t)=>{t.d(n,{A:()=>s});t(6540);var r=t(4848);const s=e=>{let{data:n}=e,t=[],s=[],i="",a="";if(n)try{const e=JSON.parse(n);i=e.name||"",a=e.dtype||"Unknown type",t=e.index||[],s=e.data||[]}catch(c){console.error("Error parsing data prop in SeriesComponent:",c)}const o=s.map((e=>JSON.stringify(e)));return(0,r.jsxs)("div",{className:"series-container",children:[(0,r.jsx)("ul",{className:"series-list",children:o.map(((e,n)=>(0,r.jsxs)("li",{className:"series-item",children:[(0,r.jsx)("span",{className:"series-index",children:t[n]}),(0,r.jsx)("span",{className:"series-value",children:"true"===e||"false"===e?e.charAt(0).toUpperCase()+e.slice(1):e})]},n)))}),(0,r.jsxs)("div",{className:"series-footer",children:["Name: ",i,", dtype: ",a]})]})}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var r=t(6540);const s={},i=r.createContext(s);function a(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);