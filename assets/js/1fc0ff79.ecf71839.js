"use strict";(self.webpackChunkbpd_reference=self.webpackChunkbpd_reference||[]).push([[3279],{1046:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var t=n(4848),i=n(8453),r=n(8597),o=(n(8205),n(8951));const a={sidebar_position:3,description:"Allows for multiple conditions to be combined at the same time."},d=void 0,c={id:"documentation/if-statements/Logical Operators",title:"Logical Operators",description:"Allows for multiple conditions to be combined at the same time.",source:"@site/docs/documentation/if-statements/Logical Operators.md",sourceDirName:"documentation/if-statements",slug:"/documentation/if-statements/Logical Operators",permalink:"/bpd-reference/docs/documentation/if-statements/Logical Operators",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,description:"Allows for multiple conditions to be combined at the same time."},sidebar:"docsSidebar",previous:{title:"in  \u2044 not in",permalink:"/bpd-reference/docs/documentation/if-statements/in  \u2044 not in"},next:{title:"Data Format Conversion",permalink:"/bpd-reference/docs/documentation/data-format-conversion/"}},l={},p=[];function m(e){const s={code:"code",hr:"hr",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:[(0,t.jsxs)("code",{children:["if <condition> and <condition>: ",(0,t.jsx)("br",{})]}),"\n\xa0\xa0\xa0\xa0\xa0\xa0 ",(0,t.jsxs)("code",{children:[" <if body> ",(0,t.jsx)("br",{})," "]}),"\n",(0,t.jsxs)("code",{children:["if <condition> or <condition>: ",(0,t.jsx)("br",{})]}),"\n\xa0\xa0\xa0\xa0\xa0\xa0 ",(0,t.jsxs)("code",{children:[" <if body> ",(0,t.jsx)("br",{})," "]}),"\n",(0,t.jsxs)("code",{children:["if not(<condition>): ",(0,t.jsx)("br",{})]}),"\n\xa0\xa0\xa0\xa0\xa0\xa0 ",(0,t.jsxs)("code",{children:[" <if body> ",(0,t.jsx)("br",{})," "]})]}),"\n",(0,t.jsxs)("div",{className:"base",children:[(0,t.jsx)("p",{children:(0,t.jsx)("strong",{children:"Allows for multiple conditions to be combined at the same time. "})}),(0,t.jsxs)("dl",{children:[(0,t.jsx)("dt",{className:"term",children:"Operators:"}),(0,t.jsxs)("dd",{className:"parameter",children:["and : ",(0,t.jsx)("em",{})]}),(0,t.jsx)("dd",{className:"parameter-description",children:"If all conditions are satisfied, the if body is executed."}),(0,t.jsxs)("dd",{className:"parameter",children:["or : ",(0,t.jsx)("em",{})]}),(0,t.jsx)("dd",{className:"parameter-description",children:"If at least one of the conditions is satisfied, the if body is executed."}),(0,t.jsxs)("dd",{className:"parameter",children:["not : ",(0,t.jsx)("em",{})]}),(0,t.jsx)("dd",{className:"parameter-description",children:"If the reverse of the condition is satisfied, the if body is executed."}),(0,t.jsx)("dt",{className:"term",children:"Returns:"}),(0,t.jsx)("dd",{children:"True or False."}),(0,t.jsx)("dt",{className:"term",children:"Return Type:"}),(0,t.jsx)("dd",{children:"Boolean"})]})]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(r.A,{data:'{"columns":["ID","Species","Color","Weight","Age"],"index":[0,1,2,3,4,5,6,7],"data":[["dog_001","dog","black",40.0,5.0],["cat_001","cat","golden",1.5,0.2],["cat_002","cat","black",15.0,9.0],["dog_002","dog","white",80.0,2.0],["dog_003","dog","black",25.0,0.5],["ham_001","hamster","black",1.0,3.0],["ham_002","hamster","golden",0.25,0.2],["cat_003","cat","black",10.0,0.0]]}'}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",children:"def more_descriptive_name(id_str, species, color, weight, age):\n    return id_str + ': This ' + color + ' ' + species + ' weighs ' + weight + ' lbs and is ' + age + ' years old'\n    \ndef cat_and_dog_info(pet_id):\n    id_arr = np.array(pets.get('ID'))\n    if pet_id not in id_arr:\n        return 'This pet is not in our record'\n    pets_info = pets[pets.get('ID') == pet_id]\n    age = pets_info.get('Age').iloc[0]\n    weight = pets_info.get('Weight').iloc[0]\n    species = pets_info.get('Species').iloc[0]\n    color = pets_info.get('Color').iloc[0]\n    if (species == 'dog') and (age < 1.5):\n        return pet_id + ': This is a puppy \ud83d\udc36'\n    elif (species == 'cat') and (age < 1):\n        return pet_id + ': This is a kitten \ud83d\udc31'\n    elif (species == 'dog') or (species == 'cat'):\n        weight = str(weight)\n        age = str(age)\n        return more_descriptive_name(pet_id, species, color, weight, age)\n"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",children:"cat_and_dog_info('dog_001')\n"})}),"\n",(0,t.jsx)(s.p,{children:"'dog_001: This black dog weighs 40.0 lbs and is 5.0 years old'"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",children:"cat_and_dog_info('cat_001')\n"})}),"\n",(0,t.jsx)(s.p,{children:"'cat_001: This is a kitten \ud83d\udc31'"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",children:"cat_and_dog_info('cat_009')\n"})}),"\n",(0,t.jsx)(s.p,{children:"'This pet is not in our record'"}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(o.A,{})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}},8597:(e,s,n)=>{n.d(s,{A:()=>i});n(6540);var t=n(4848);const i=e=>{let{data:s}=e,n=[],i=[],r="",o=[];if(s){const e=JSON.parse(s);n=e.columns||[],i=e.data||[],r=e.indexName||"Index",o=e.index||[]}return(0,t.jsx)("div",{className:"dataframe-container",children:(0,t.jsxs)("table",{className:"dataframe-table",children:[(0,t.jsx)("thead",{children:(0,t.jsxs)("tr",{children:[(0,t.jsx)("th",{children:r}),n.map(((e,s)=>(0,t.jsx)("th",{children:e},s)))]})}),(0,t.jsx)("tbody",{children:i.map(((e,s)=>(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{className:"index-value",children:o[s]}),e.map(((e,s)=>{return(0,t.jsx)("td",{children:(n=e,"boolean"==typeof n?n.toString().charAt(0).toUpperCase()+n.toString().slice(1):n)},s);var n}))]},s)))})]})})}},8205:(e,s,n)=>{n.d(s,{A:()=>i});n(6540);var t=n(4848);const i=e=>{let{data:s}=e,n=[],i=[],r="",o="";if(s)try{const e=JSON.parse(s);r=e.name||"",o=e.dtype||"Unknown type",n=e.index||[],i=e.data||[]}catch(d){console.error("Error parsing data prop in SeriesComponent:",d)}const a=i.map((e=>JSON.stringify(e)));return(0,t.jsxs)("div",{className:"series-container",children:[(0,t.jsx)("ul",{className:"series-list",children:a.map(((e,s)=>(0,t.jsxs)("li",{className:"series-item",children:[(0,t.jsx)("span",{className:"series-index",children:n[s]}),(0,t.jsx)("span",{className:"series-value",children:"true"===e||"false"===e?e.charAt(0).toUpperCase()+e.slice(1):e})]},s)))}),(0,t.jsxs)("div",{className:"series-footer",children:["Name: ",r,", dtype: ",o]})]})}},8951:(e,s,n)=>{n.d(s,{A:()=>i});n(6540);var t=n(4848);const i=()=>(0,t.jsxs)("p",{style:{fontSize:"1.2rem"},children:["Problems or suggestions about this page?","  ",(0,t.jsx)("a",{href:"https://forms.gle/cPdGGZ17j3XeQ6PE8",target:"_blank",rel:"noopener noreferrer",children:"Fill out our feedback form."})]})},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>a});var t=n(6540);const i={},r=t.createContext(i);function o(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);