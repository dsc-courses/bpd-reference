"use strict";(self.webpackChunkbpd_reference=self.webpackChunkbpd_reference||[]).push([[4932],{4266:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>h,contentTitle:()=>c,default:()=>o,frontMatter:()=>d,metadata:()=>t,toc:()=>a});var r=i(4848),n=i(8453);const d={title:"Series Methods"},c=void 0,t={id:"documentation/series-methods/index",title:"Series Methods",description:"Methods that can be performed on a Series.",source:"@site/docs/documentation/series-methods/index.md",sourceDirName:"documentation/series-methods",slug:"/documentation/series-methods/",permalink:"/bpd-reference/docs/documentation/series-methods/",draft:!1,unlisted:!1,editUrl:"https://github.com/dsc-courses/bpd-reference/tree/main/docs/documentation/series-methods/index.md",tags:[],version:"current",frontMatter:{title:"Series Methods"},sidebar:"docsSidebar",previous:{title:"df.take()",permalink:"/bpd-reference/docs/documentation/accessing-data/df.take()"},next:{title:"ser.count()",permalink:"/bpd-reference/docs/documentation/series-methods/ser.count()"}},h={},a=[{value:"Aggregation",id:"aggregation",level:2},{value:"String",id:"string",level:2}];function l(e){const s={a:"a",code:"code",h2:"h2",p:"p",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("p",{className:"main-description",children:"Methods that can be performed on a Series."}),"\n",(0,r.jsx)(s.h2,{id:"aggregation",children:"Aggregation"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)("div",{className:"method-container",children:[(0,r.jsx)("div",{className:"method",children:(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"ser.count()",children:(0,r.jsx)("code",{children:"ser.count"})}),"()"]})}),(0,r.jsx)("div",{className:"description",children:(0,r.jsx)("p",{children:"Returns the number of non-NA/null observations in the Series."})})]}),"\n",(0,r.jsxs)("div",{className:"method-container",children:[(0,r.jsx)("div",{className:"method",children:(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"ser.max()",children:(0,r.jsx)("code",{children:"ser.max"})}),"()"]})}),(0,r.jsx)("div",{className:"description",children:(0,r.jsx)("p",{children:"Returns the maximum of the values in the Series."})})]}),"\n",(0,r.jsxs)("div",{className:"method-container",children:[(0,r.jsx)("div",{className:"method",children:(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"ser.min()",children:(0,r.jsx)("code",{children:"ser.min"})}),"()"]})}),(0,r.jsx)("div",{className:"description",children:(0,r.jsx)("p",{children:"Returns the minimum of the values in the Series."})})]}),"\n",(0,r.jsxs)("div",{className:"method-container",children:[(0,r.jsx)("div",{className:"method",children:(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"ser.sum()",children:(0,r.jsx)("code",{children:"ser.sum"})}),"()"]})}),(0,r.jsx)("div",{className:"description",children:(0,r.jsx)("p",{children:"Returns the sum of the values in the Series."})})]}),"\n",(0,r.jsxs)("div",{className:"method-container",children:[(0,r.jsx)("div",{className:"method",children:(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"ser.mean()",children:(0,r.jsx)("code",{children:"ser.mean"})}),"()"]})}),(0,r.jsx)("div",{className:"description",children:(0,r.jsx)("p",{children:"Returns the mean of the values in the Series."})})]}),"\n",(0,r.jsxs)("div",{className:"method-container",children:[(0,r.jsx)("div",{className:"method",children:(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"ser.median()",children:(0,r.jsx)("code",{children:"ser.median"})}),"()"]})}),(0,r.jsx)("div",{className:"description",children:(0,r.jsx)("p",{children:"Returns the median of the values in the Series."})})]}),"\n",(0,r.jsxs)("div",{className:"method-container",children:[(0,r.jsx)("div",{className:"method",children:(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"ser.unique()",children:(0,r.jsx)("code",{children:"ser.unique"})}),"()"]})}),(0,r.jsx)("div",{className:"description",children:(0,r.jsx)("p",{children:"Returns the unique values in the Series."})})]}),"\n",(0,r.jsx)(s.h2,{id:"string",children:"String"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)("div",{className:"method-container",children:[(0,r.jsx)("div",{className:"method",children:(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"ser.str.split()",children:(0,r.jsx)("code",{children:"ser.str.split"})}),"()"]})}),(0,r.jsx)("div",{className:"description",children:(0,r.jsx)("p",{children:"Splits each string element in the Series from the beginning, at the specified seperator/delimiter string."})})]}),"\n",(0,r.jsxs)("div",{className:"method-container",children:[(0,r.jsx)("div",{className:"method",children:(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"ser.str.strip()",children:(0,r.jsx)("code",{children:"ser.str.strip"})}),"(to_remove=None)"]})}),(0,r.jsx)("div",{className:"description",children:(0,r.jsx)("p",{children:"Removes the specified character from each string in the Series from left and right sides."})})]}),"\n",(0,r.jsxs)("div",{className:"method-container",children:[(0,r.jsx)("div",{className:"method",children:(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"ser.str.lower()",children:(0,r.jsx)("code",{children:"ser.str.lower"})}),"()"]})}),(0,r.jsx)("div",{className:"description",children:(0,r.jsx)("p",{children:"Converts strings in the Series to lowercase."})})]}),"\n",(0,r.jsxs)("div",{className:"method-container",children:[(0,r.jsx)("div",{className:"method",children:(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"ser.str.upper()",children:(0,r.jsx)("code",{children:"ser.str.upper"})}),"()"]})}),(0,r.jsx)("div",{className:"description",children:(0,r.jsx)("p",{children:"Converts strings in the Series to uppercase."})})]}),"\n",(0,r.jsxs)("div",{className:"method-container",children:[(0,r.jsx)("div",{className:"method",children:(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"ser.str.capitalize()",children:(0,r.jsx)("code",{children:"ser.str.capitalize"})}),"()"]})}),(0,r.jsx)("div",{className:"description",children:(0,r.jsx)("p",{children:"Converts every first character in Series' elements to be capitalized."})})]}),"\n",(0,r.jsxs)("div",{className:"method-container",children:[(0,r.jsx)("div",{className:"method",children:(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"ser.str.title()",children:(0,r.jsx)("code",{children:"ser.str.title"})}),"()"]})}),(0,r.jsx)("div",{className:"description",children:(0,r.jsx)("p",{children:"Converts strings in the Series to be titlecased."})})]}),"\n",(0,r.jsxs)("div",{className:"method-container",children:[(0,r.jsx)("div",{className:"method",children:(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"ser.str.replace()",children:(0,r.jsx)("code",{children:"ser.str.replace"})}),"(old, new)"]})}),(0,r.jsx)("div",{className:"description",children:(0,r.jsxs)("p",{children:["Substitutes all ",(0,r.jsx)(s.code,{children:"old"})," strings with the ",(0,r.jsx)(s.code,{children:"new"})," string for every element of the Series."]})})]}),"\n",(0,r.jsxs)("div",{className:"method-container",children:[(0,r.jsx)("div",{className:"method",children:(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"ser.str.len()",children:(0,r.jsx)("code",{children:"ser.str.len"})}),"()"]})}),(0,r.jsx)("div",{className:"description",children:(0,r.jsx)("p",{children:"Counts the number of characters in the Series for each element."})})]}),"\n",(0,r.jsxs)("div",{className:"method-container",children:[(0,r.jsx)("div",{className:"method",children:(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"ser.str.contains()",children:(0,r.jsx)("code",{children:"ser.str.contains"})}),"(substring)"]})}),(0,r.jsx)("div",{className:"description",children:(0,r.jsx)("p",{children:"Tests if a substring is contained within each element of the Series."})})]})]})}function o(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,s,i)=>{i.d(s,{R:()=>c,x:()=>t});var r=i(6540);const n={},d=r.createContext(n);function c(e){const s=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),r.createElement(d.Provider,{value:s},e.children)}}}]);