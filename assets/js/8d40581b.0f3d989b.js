"use strict";(self.webpackChunkbpd_reference=self.webpackChunkbpd_reference||[]).push([[5745],{6900:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>c,metadata:()=>d,toc:()=>p});var s=t(4848),a=t(8453),r=t(8597),i=t(8205);const c={sidebar_position:2},o=void 0,d={id:"documentation/Functions/Applying Functions",title:"Applying Functions",description:"df.get(columnname).apply(functionname)",source:"@site/docs/documentation/Functions/Applying Functions.md",sourceDirName:"documentation/Functions",slug:"/documentation/Functions/Applying Functions",permalink:"/bpd-reference/docs/documentation/Functions/Applying Functions",draft:!1,unlisted:!1,editUrl:"https://github.com/dsc-courses/bpd-reference/tree/main/docs/documentation/Functions/Applying Functions.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"Writing Functions",permalink:"/bpd-reference/docs/documentation/Functions/Writing Functions"},next:{title:"groupby",permalink:"/bpd-reference/docs/documentation/Grouping/groupby"}},l={},p=[];function u(e){const n={a:"a",code:"code",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("code",{children:"df.get(column_name).apply(function_name)"}),"\n",(0,s.jsxs)("div",{className:"base",children:[(0,s.jsx)("p",{children:(0,s.jsx)("strong",{children:"Applies a function of one parameter to every entry in the column."})}),(0,s.jsxs)("dl",{children:[(0,s.jsx)("dt",{className:"term",children:"Input:"}),(0,s.jsxs)("dd",{className:"parameter",children:["function_name: ",(0,s.jsx)("em",{children:"a python function"})]}),(0,s.jsx)("dd",{className:"parameter-description",children:"The function to apply to every entry in the column. This function should take a single parameter and return a value."}),(0,s.jsx)("dt",{className:"term",children:"Returns:"}),(0,s.jsx)("dd",{children:" A Series of the same size containing the results of the function application."}),(0,s.jsx)("dt",{className:"term",children:"Return Type:"}),(0,s.jsx)("dd",{className:"parameter",children:"Series:"}),(0,s.jsx)("dd",{className:"parameter-description",children:"The returned Series will have the same index as the input Series and will contain the transformed values based on the applied function."})]})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"pets\n"})}),"\n",(0,s.jsx)(r.A,{data:'{"columns":["Species","Color","Weight","Age"],"index":[0,1,2,3,4,5,6],"data":[["dog","black",40.0,5.0],["cat","golden",15.0,8.0],["cat","black",20.0,9.0],["dog","white",80.0,2.0],["dog","black",25.0,0.5],["hamster","black",1.0,3.0],["hamster","golden",0.25,0.2]]}'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"pets.get('Species').apply(is_dog)\n"})}),"\n",(0,s.jsx)(i.A,{data:'{"name":"Species","dtype":"bool", "index":["0","1","2","3","4","5","6"],"data":["True","False","False","True","True","False","False"]}'}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"pets.get('Weight').apply(np.sqrt)\n"})}),"\n",(0,s.jsx)(i.A,{data:'{"name":"Weights","dtype":"float64", "index":["0","1","2","3","4","5","6","7"],"data":["6.324555","3.872983","4.472136","8.944272","5.000000","1.000000","0.500000"]}'}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:["(Refer back to ",(0,s.jsx)(n.a,{href:"../Functions/Writing%20Functions",children:"Writing Functions"})," for categorize_animal.)"]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"pets.get('ID').apply(categorize_animal)\n"})}),"\n",(0,s.jsx)(i.A,{data:'{"name":"description","dtype":"object","index":[0,1,2,3,4,5,6,7],"data":["Adult Normal","Kitten Underweight","Adult Overweight","Adult Overweight","Puppy Normal","Senior Overweight","Young Normal","Kitten Normal"]}'})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8597:(e,n,t)=>{t.d(n,{A:()=>a});t(6540);var s=t(4848);const a=e=>{let{data:n}=e,t=[],a=[],r="",i=[];if(n){const e=JSON.parse(n);t=e.columns||[],a=e.data||[],r=e.indexName||"Index",i=e.index||[]}return(0,s.jsx)("div",{className:"dataframe-container",children:(0,s.jsxs)("table",{className:"dataframe-table",children:[(0,s.jsx)("thead",{children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{children:r}),t.map(((e,n)=>(0,s.jsx)("th",{children:e},n)))]})}),(0,s.jsx)("tbody",{children:a.map(((e,n)=>(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{className:"index-value",children:i[n]}),e.map(((e,n)=>{return(0,s.jsx)("td",{children:(t=e,"boolean"==typeof t?t.toString().charAt(0).toUpperCase()+t.toString().slice(1):t)},n);var t}))]},n)))})]})})}},8205:(e,n,t)=>{t.d(n,{A:()=>a});t(6540);var s=t(4848);const a=e=>{let{data:n}=e,t=[],a=[],r="",i="";if(n)try{const e=JSON.parse(n);r=e.name||"",i=e.dtype||"Unknown type",t=e.index||[],a=e.data||[]}catch(o){console.error("Error parsing data prop in SeriesComponent:",o)}const c=a.map((e=>JSON.stringify(e)));return(0,s.jsxs)("div",{className:"series-container",children:[(0,s.jsx)("ul",{className:"series-list",children:c.map(((e,n)=>(0,s.jsxs)("li",{className:"series-item",children:[(0,s.jsx)("span",{className:"series-index",children:t[n]}),(0,s.jsx)("span",{className:"series-value",children:"true"===e||"false"===e?e.charAt(0).toUpperCase()+e.slice(1):e})]},n)))}),(0,s.jsxs)("div",{className:"series-footer",children:["Name: ",r,", dtype: ",i]})]})}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>c});var s=t(6540);const a={},r=s.createContext(a);function i(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);