"use strict";(self.webpackChunkbpd_reference=self.webpackChunkbpd_reference||[]).push([[6077],{6120:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>i,contentTitle:()=>d,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=n(4848),t=n(8453),a=(n(8597),n(8205));const o={sidebar_position:14},d=void 0,c={id:"documentation/series-methods/ser.str.replace()",title:"ser.str.replace()",description:"ser.str.replace(old, new)",source:"@site/docs/documentation/series-methods/ser.str.replace().md",sourceDirName:"documentation/series-methods",slug:"/documentation/series-methods/ser.str.replace()",permalink:"/bpd-reference/docs/documentation/series-methods/ser.str.replace()",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:14,frontMatter:{sidebar_position:14},sidebar:"docsSidebar",previous:{title:"ser.str.title()",permalink:"/bpd-reference/docs/documentation/series-methods/ser.str.title()"},next:{title:"ser.str.len()",permalink:"/bpd-reference/docs/documentation/series-methods/ser.str.len()"}},i={},l=[];function h(e){const s={code:"code",hr:"hr",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("code",{children:"ser.str.replace(old, new)"}),"\n",(0,r.jsxs)("div",{className:"base",children:[(0,r.jsx)("p",{children:(0,r.jsxs)("strong",{children:["Substitutes all occurences ",(0,r.jsx)(s.code,{children:"old"})," with ",(0,r.jsx)(s.code,{children:"new"})," for every element of the Series."]})}),(0,r.jsxs)("dl",{children:[(0,r.jsx)("dt",{className:"term",children:"Input:"}),(0,r.jsxs)("dd",{className:"parameter",children:["old : ",(0,r.jsx)("em",{children:"string"})]}),(0,r.jsx)("dd",{className:"parameter-description",children:"String to replace."}),(0,r.jsxs)("dd",{className:"parameter",children:["new : ",(0,r.jsx)("em",{children:"string"})]}),(0,r.jsx)("dd",{className:"parameter-description",children:"Replacement string."}),(0,r.jsx)("dt",{className:"term",children:"Returns:"}),(0,r.jsxs)("dd",{children:["Returns a Series where each occurence of the string ",(0,r.jsx)(s.code,{children:"old"})," replaced by ",(0,r.jsx)(s.code,{children:"new"}),"."]}),(0,r.jsx)("dt",{className:"term",children:"Return Type:"}),(0,r.jsx)("dd",{children:"Series"})]})]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"comment_ser = pets.get('Owner_Comment')\ncomment_ser\n"})}),"\n",(0,r.jsx)(a.A,{data:'{"name":"Owner_Comment","dtype":"object","index":[0,1,2,3,4,5,6,7],"data":["      There are no bad dogs, only bad owners.","My best birthday present ever!!!","****All you need is love and a cat.****","Love is a wet nose and a wagging tail.","Be the person your dog thinks you are.","No, thank you!","No, thank you!","No, thank you!"]}'}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"comment_ser.str.replace('dog', 'cat')\n"})}),"\n",(0,r.jsx)(a.A,{data:'{"name":"Owner_Comment","dtype":"object","index":[0,1,2,3,4,5,6,7],"data":["      There are no bad cats, only bad owners.","My best birthday present ever!!!","****All you need is love and a cat.****","Love is a wet nose and a wagging tail.","Be the person your cat thinks you are.","No, thank you!","No, thank you!","No, thank you!"]}'}),"\n",(0,r.jsxs)("p",{children:[(0,r.jsx)("br",{})," ",(0,r.jsx)(s.strong,{children:"Replaced multiple strings."})," "]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"comment_ser.str.replace('dog', 'cat').str.replace('birthday', '\ud83c\udf70')\n"})}),"\n",(0,r.jsx)(a.A,{data:'{"name":"Owner_Comment","dtype":"object","index":[0,1,2,3,4,5,6,7],"data":["      There are no bad cats, only bad owners.","My best \\ud83c\\udf70 present ever!!!","****All you need is love and a cat.****","Love is a wet nose and a wagging tail.","Be the person your cat thinks you are.","No, thank you!","No, thank you!","No, thank you!"]}'})]})}function m(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8597:(e,s,n)=>{n.d(s,{A:()=>t});n(6540);var r=n(4848);const t=e=>{let{data:s}=e,n=[],t=[],a="",o=[];if(s){const e=JSON.parse(s);n=e.columns||[],t=e.data||[],a=e.indexName||"Index",o=e.index||[]}return(0,r.jsx)("div",{className:"dataframe-container",children:(0,r.jsxs)("table",{className:"dataframe-table",children:[(0,r.jsx)("thead",{children:(0,r.jsxs)("tr",{children:[(0,r.jsx)("th",{children:a}),n.map(((e,s)=>(0,r.jsx)("th",{children:e},s)))]})}),(0,r.jsx)("tbody",{children:t.map(((e,s)=>(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{className:"index-value",children:o[s]}),e.map(((e,s)=>{return(0,r.jsx)("td",{children:(n=e,"boolean"==typeof n?n.toString().charAt(0).toUpperCase()+n.toString().slice(1):n)},s);var n}))]},s)))})]})})}},8205:(e,s,n)=>{n.d(s,{A:()=>t});n(6540);var r=n(4848);const t=e=>{let{data:s}=e,n=[],t=[],a="",o="";if(s)try{const e=JSON.parse(s);a=e.name||"",o=e.dtype||"Unknown type",n=e.index||[],t=e.data||[]}catch(c){console.error("Error parsing data prop in SeriesComponent:",c)}const d=t.map((e=>JSON.stringify(e)));return(0,r.jsxs)("div",{className:"series-container",children:[(0,r.jsx)("ul",{className:"series-list",children:d.map(((e,s)=>(0,r.jsxs)("li",{className:"series-item",children:[(0,r.jsx)("span",{className:"series-index",children:n[s]}),(0,r.jsx)("span",{className:"series-value",children:"true"===e||"false"===e?e.charAt(0).toUpperCase()+e.slice(1):e})]},s)))}),(0,r.jsxs)("div",{className:"series-footer",children:["Name: ",a,", dtype: ",o]})]})}},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>d});var r=n(6540);const t={},a=r.createContext(t);function o(e){const s=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(a.Provider,{value:s},e.children)}}}]);