"use strict";(self.webpackChunkbpd_reference=self.webpackChunkbpd_reference||[]).push([[9572],{9108:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>d,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>h});var a=n(4848),t=n(8453),o=n(8597),r=n(8205);const i={sidebar_position:2},d=void 0,c={id:"documentation/querying/df[]",title:"df[]",description:"df[condition]",source:"@site/docs/documentation/querying/df[].md",sourceDirName:"documentation/querying",slug:"/documentation/querying/df[]",permalink:"/bpd-reference/docs/documentation/querying/df[]",draft:!1,unlisted:!1,editUrl:"https://github.com/dsc-courses/bpd-reference/tree/main/docs/documentation/querying/df[].md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"Querying",permalink:"/bpd-reference/docs/category/querying"},next:{title:"Writing Functions",permalink:"/bpd-reference/docs/documentation/Functions/Writing Functions"}},l={},h=[];function g(e){const s={code:"code",hr:"hr",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("code",{children:"df[condition]"}),"\n",(0,a.jsxs)("div",{className:"base",children:[(0,a.jsx)("p",{children:(0,a.jsx)("strong",{children:"Creates a new dataframe containing only the rows that satisfy a specific condition. "})}),(0,a.jsxs)("dl",{children:[(0,a.jsx)("dt",{className:"term",children:"Input:"}),(0,a.jsxs)("dd",{className:"parameter",children:["condition : ",(0,a.jsx)("em",{children:"bool"})]}),(0,a.jsx)("dd",{className:"parameter-description",children:" A sequence of boolean values with length equal to the number of rows of the DataFrame."}),(0,a.jsx)("dt",{className:"term",children:"Returns:"}),(0,a.jsx)("dd",{children:"new_df - A new DataFrame that contains only the rows whose corresponding element in condition is True."}),(0,a.jsx)("dt",{className:"term",children:"Return Type:"}),(0,a.jsx)("dd",{children:"DataFrame"})]})]}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:"pets\n"})}),"\n",(0,a.jsx)(o.A,{data:'{"columns":["ID","Species","Color","Weight","Age","Is_Cat","Owner_Comment"],"index":[0,1,2,3,4,5,6,7],"data":[["dog_001","dog","black",40.0,5.0,false,"      There are no bad dogs, only bad owners."],["cat_001","cat","golden",1.5,0.2,true,"My best birthday present ever!!!"],["cat_002","cat","black",15.0,9.0,true,"****All you need is love and a cat.****"],["dog_002","dog","white",80.0,2.0,false,"Love is a wet nose and a wagging tail."],["dog_003","dog","black",25.0,0.5,false,"Be the person your dog thinks you are."],["ham_001","hamster","black",1.0,3.0,false,"No, thank you!"],["ham_002","hamster","golden",0.25,0.2,false,"No, thank you!"],["cat_003","cat","black",10.0,0.0,true,"No, thank you!"]]}'}),"\n",(0,a.jsx)("p",{children:(0,a.jsx)("strong",{children:" Series of bools of if Species is a dog AND Color is white "})}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:"(pets.get('Species')=='dog') & (pets.get('Color')=='white')\n"})}),"\n",(0,a.jsx)(r.A,{data:'{"name":"Species is a dog AND color is white","index":[0,1,2,3,4,5,6,7],"data":[false,false,false,true,false,false,false,false]}'}),"\n",(0,a.jsx)("p",{children:(0,a.jsx)("strong",{children:" DataFrame where Species is a dog AND Color is white "})}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:"pets[(pets.get('Species')=='dog') & (pets.get('Color')=='white')]\n"})}),"\n",(0,a.jsx)(o.A,{data:'{"columns":["ID","Species","Color","Weight","Age","Is_Cat","Owner_Comment"],"index":[3],"data":[["dog_002","dog","white",80.0,2.0,false,"Love is a wet nose and a wagging tail."]]}'}),"\n",(0,a.jsx)("p",{children:(0,a.jsx)("strong",{children:" Series of bools where Species is a dog OR Color is white"})}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:"(pets.get('Species')=='dog') | (pets.get('Color')=='white')\n"})}),"\n",(0,a.jsx)(r.A,{data:'{"name":"Species is a dog OR color is white","index":[0,1,2,3,4,5,6,7],"data":[true,false,false,true,true,false,false,false]}'}),"\n",(0,a.jsx)("p",{children:(0,a.jsx)("strong",{children:" DataFrame where Species is a dog OR Color is white"})}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:"pets[(pets.get('Species')=='dog') | (pets.get('Color')=='white')]\n"})}),"\n",(0,a.jsx)(o.A,{data:'{"columns":["ID","Species","Color","Weight","Age","Is_Cat","Owner_Comment"],"index":[0,3,4],"data":[["dog_001","dog","black",40.0,5.0,false,"      There are no bad dogs, only bad owners."],["dog_002","dog","white",80.0,2.0,false,"Love is a wet nose and a wagging tail."],["dog_003","dog","black",25.0,0.5,false,"Be the person your dog thinks you are."]]}'}),"\n",(0,a.jsx)("p",{children:(0,a.jsx)("strong",{children:"Some other examples!"})}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:"pets[pets.get('Weight') >= 25]\n"})}),"\n",(0,a.jsx)(o.A,{data:'{"columns":["ID","Species","Color","Weight","Age","Is_Cat","Owner_Comment"],"index":[0,3,4],"data":[["dog_001","dog","black",40.0,5.0,false,"      There are no bad dogs, only bad owners."],["dog_002","dog","white",80.0,2.0,false,"Love is a wet nose and a wagging tail."],["dog_003","dog","black",25.0,0.5,false,"Be the person your dog thinks you are."]]}'}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:"pets[pets[(pets.get('Weight') >= 25) &  (pets.get('Weight') < 80)]]\n"})}),"\n",(0,a.jsx)(o.A,{data:'{"columns":["ID","Species","Color","Weight","Age","Is_Cat","Owner_Comment"],"index":[0,4],"data":[["dog_001","dog","black",40.0,5.0,false,"      There are no bad dogs, only bad owners."],["dog_003","dog","black",25.0,0.5,false,"Be the person your dog thinks you are."]]}'}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:"pets[pets[pets.get('Color').str.contains('e')]]\n"})}),"\n",(0,a.jsx)(o.A,{data:'{"columns":["ID","Species","Color","Weight","Age","Is_Cat","Owner_Comment"],"index":[1,3,6],"data":[["cat_001","cat","golden",1.5,0.2,true,"My best birthday present ever!!!"],["dog_002","dog","white",80.0,2.0,false,"Love is a wet nose and a wagging tail."],["ham_002","hamster","golden",0.25,0.2,false,"No, thank you!"]]}'}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:"pets[pets1 = pets.set_index('ID')\npets1[pets1.index.str.contains('cat')]]\n"})}),"\n",(0,a.jsx)(o.A,{data:'{"columns":["Species","Color","Weight","Age","Is_Cat","Owner_Comment"],"index":["cat_001","cat_002","cat_003"],"data":[["cat","golden",1.5,0.2,true,"My best birthday present ever!!!"],["cat","black",15.0,9.0,true,"****All you need is love and a cat.****"],["cat","black",10.0,0.0,true,"No, thank you!"]]}'}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:"pets[pets.index > 3]\n"})}),"\n",(0,a.jsx)(o.A,{data:'{"columns":["ID","Species","Color","Weight","Age","Is_Cat","Owner_Comment"],"index":[4,5,6,7],"data":[["dog_003","dog","black",25.0,0.5,false,"Be the person your dog thinks you are."],["ham_001","hamster","black",1.0,3.0,false,"No, thank you!"],["ham_002","hamster","golden",0.25,0.2,false,"No, thank you!"],["cat_003","cat","black",10.0,0.0,true,"No, thank you!"]]}'})]})}function p(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(g,{...e})}):g(e)}},8597:(e,s,n)=>{n.d(s,{A:()=>t});n(6540);var a=n(4848);const t=e=>{let{data:s}=e,n=[],t=[],o="",r=[];if(s){const e=JSON.parse(s);n=e.columns||[],t=e.data||[],o=e.indexName||"Index",r=e.index||[]}return(0,a.jsx)("div",{className:"dataframe-container",children:(0,a.jsxs)("table",{className:"dataframe-table",children:[(0,a.jsx)("thead",{children:(0,a.jsxs)("tr",{children:[(0,a.jsx)("th",{children:o}),n.map(((e,s)=>(0,a.jsx)("th",{children:e},s)))]})}),(0,a.jsx)("tbody",{children:t.map(((e,s)=>(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{className:"index-value",children:r[s]}),e.map(((e,s)=>{return(0,a.jsx)("td",{children:(n=e,"boolean"==typeof n?n.toString().charAt(0).toUpperCase()+n.toString().slice(1):n)},s);var n}))]},s)))})]})})}},8205:(e,s,n)=>{n.d(s,{A:()=>t});n(6540);var a=n(4848);const t=e=>{let{data:s}=e,n=[],t=[],o="",r="";if(s)try{const e=JSON.parse(s);o=e.name||"",r=e.dtype||"Unknown type",n=e.index||[],t=e.data||[]}catch(d){console.error("Error parsing data prop in SeriesComponent:",d)}const i=t.map((e=>JSON.stringify(e)));return(0,a.jsxs)("div",{className:"series-container",children:[(0,a.jsx)("ul",{className:"series-list",children:i.map(((e,s)=>(0,a.jsxs)("li",{className:"series-item",children:[(0,a.jsx)("span",{className:"series-index",children:n[s]}),(0,a.jsx)("span",{className:"series-value",children:"true"===e||"false"===e?e.charAt(0).toUpperCase()+e.slice(1):e})]},s)))}),(0,a.jsxs)("div",{className:"series-footer",children:["Name: ",o,", dtype: ",r]})]})}},8453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>i});var a=n(6540);const t={},o=a.createContext(t);function r(e){const s=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),a.createElement(o.Provider,{value:s},e.children)}}}]);