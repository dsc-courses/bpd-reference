"use strict";(self.webpackChunkbpd_reference=self.webpackChunkbpd_reference||[]).push([[3782],{7494:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>c,metadata:()=>o,toc:()=>l});var t=n(4848),a=n(8453),r=(n(8597),n(8205));const c={sidebar_position:4},i=void 0,o={id:"documentation/accessing-data/ser.iloc[]",title:"ser.iloc[]",description:"ser.iloc[position]",source:"@site/docs/documentation/accessing-data/ser.iloc[].md",sourceDirName:"documentation/accessing-data",slug:"/documentation/accessing-data/ser.iloc[]",permalink:"/bpd-reference/docs/documentation/accessing-data/ser.iloc[]",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docsSidebar",previous:{title:"ser.loc[]",permalink:"/bpd-reference/docs/documentation/accessing-data/ser.loc[]"},next:{title:"df.index",permalink:"/bpd-reference/docs/documentation/accessing-data/df.index"}},d={},l=[];function h(e){const s={code:"code",hr:"hr",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)("code",{children:"ser.iloc[position]"}),"\n",(0,t.jsxs)("div",{className:"base",children:[(0,t.jsx)("p",{children:(0,t.jsx)("strong",{children:"Returns the element in the Series at the given position."})}),(0,t.jsxs)("dl",{children:[(0,t.jsx)("dt",{className:"term",children:"Note:"}),(0,t.jsxs)("ul",{children:[(0,t.jsx)("li",{children:"Positions start at 0."}),(0,t.jsxs)("li",{children:[(0,t.jsx)(s.code,{children:"ser"})," often comes from ",(0,t.jsx)(s.code,{children:"df.get(column_name)"}),"."]}),(0,t.jsxs)("li",{children:[" In DSC 10, we only use ",(0,t.jsx)(s.code,{children:"loc"})," and ",(0,t.jsx)(s.code,{children:"iloc"})," on Series, and never on DataFrames. That's because we want to avoid working with row objects, which contain data of varying types. To extract something from a data frame, you should always use ",(0,t.jsx)(s.code,{children:"get"})," first to grab the column as a series, then use ",(0,t.jsx)(s.code,{children:"loc"})," or ",(0,t.jsx)(s.code,{children:"iloc"})," to get the individual entry."]})]})]})]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",children:"species_ser\n"})}),"\n",(0,t.jsx)(r.A,{data:'{"name":"Species","index":["dog_001","cat_001","cat_002","dog_002","dog_003","ham_001","ham_002","cat_003"],"data":["dog","cat","cat","dog","dog","hamster","hamster","cat"], "dtype":"object"}'}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",children:"species_ser.iloc[2]\n"})}),"\n",(0,t.jsx)(s.p,{children:"'cat'"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",children:"species_ser.iloc[3]\n"})}),"\n",(0,t.jsx)(s.p,{children:"'dog'"})]})}function p(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8597:(e,s,n)=>{n.d(s,{A:()=>a});n(6540);var t=n(4848);const a=e=>{let{data:s}=e,n=[],a=[],r="",c=[];if(s){const e=JSON.parse(s);n=e.columns||[],a=e.data||[],r=e.indexName||"Index",c=e.index||[]}return(0,t.jsx)("div",{className:"dataframe-container",children:(0,t.jsxs)("table",{className:"dataframe-table",children:[(0,t.jsx)("thead",{children:(0,t.jsxs)("tr",{children:[(0,t.jsx)("th",{children:r}),n.map(((e,s)=>(0,t.jsx)("th",{children:e},s)))]})}),(0,t.jsx)("tbody",{children:a.map(((e,s)=>(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{className:"index-value",children:c[s]}),e.map(((e,s)=>{return(0,t.jsx)("td",{children:(n=e,"boolean"==typeof n?n.toString().charAt(0).toUpperCase()+n.toString().slice(1):n)},s);var n}))]},s)))})]})})}},8205:(e,s,n)=>{n.d(s,{A:()=>a});n(6540);var t=n(4848);const a=e=>{let{data:s}=e,n=[],a=[],r="",c="";if(s)try{const e=JSON.parse(s);r=e.name||"",c=e.dtype||"Unknown type",n=e.index||[],a=e.data||[]}catch(o){console.error("Error parsing data prop in SeriesComponent:",o)}const i=a.map((e=>JSON.stringify(e)));return(0,t.jsxs)("div",{className:"series-container",children:[(0,t.jsx)("ul",{className:"series-list",children:i.map(((e,s)=>(0,t.jsxs)("li",{className:"series-item",children:[(0,t.jsx)("span",{className:"series-index",children:n[s]}),(0,t.jsx)("span",{className:"series-value",children:"true"===e||"false"===e?e.charAt(0).toUpperCase()+e.slice(1):e})]},s)))}),(0,t.jsxs)("div",{className:"series-footer",children:["Name: ",r,", dtype: ",c]})]})}},8453:(e,s,n)=>{n.d(s,{R:()=>c,x:()=>i});var t=n(6540);const a={},r=t.createContext(a);function c(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);